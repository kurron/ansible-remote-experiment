#!/usr/bin/env ansible-playbook

# This playbook is provision an Ubuntu 14.04 server so that it can run various Docker containers
# In order for this to work the public key must be set up, eg ssh-copy-id -i id_rsa.pub user@192.168.1.2
# Obviously, Ansible must be installed on the box running this script.  You also have to have rigged the box
# being provisioned to have passwordless sudo or you have to have Ansible ask you for the passphrase.

---
- name: Python 
  hosts: all
  tasks:
    - name: Install Python support
      apt: "name={{ item }} state=present"
      with_items:
          - python-apt
          - apt-transport-https
          - python-setuptools
          - python-dev 
    - easy_install: name=pip 
    - apt: name=git state=present
    - apt: name=tmux state=present
    - apt: name=iftop state=present

- name: Ansible
  hosts: ansible-control 
  tasks:
      - name: Install Ansible 
        pip: name=ansible state=latest

- name: Populate Host File 
  hosts: docker-host 
  tasks:
      - name: Add batcave to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.222 batcave" 
      - name: Add stargate to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.227 stargate" 
      - name: Add atlantis to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.229 atlantis" 
      - name: Add docker to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.233 docker" 
      - name: Add nas to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.234 nas" 
      - name: Add pi to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.235 pi" 
      - name: Add pi2 to hostfile
        lineinfile: dest=/etc/hosts line="192.168.1.236 pi2" 

- name: Install Newrelic Server Agent 
  hosts: newrelic-server 
  tasks:
      - apt_repository: repo='deb http://apt.newrelic.com/debian/ newrelic non-free' state=present
      - apt_key: url=https://download.newrelic.com/548C16BF.gpg state=present
      - apt: name=newrelic-sysmond state=present update_cache=yes
      - command: nrsysmond-config --set license_key=9a3465dc990aa65ee1037041a7d0f770ef428cfd 
      - service: name=newrelic-sysmond state=restarted
 
- name: Docker Containers
  hosts: docker-host 
  tasks:
      - name: Create the vagrant group just to work with ansible-pull
        group: name=vagrant state=present
      - name: Create the vagrant user just to work with ansible-pull
        user: name=vagrant group=vagrant  
      - name: Create Pull Directory 
        file: path=/opt/git state=directory
      - name: Copy Inventory File 
        copy: src=docker-host.ini dest=/tmp/inventory.ini
      - name: Run Ansible Pull 
        command: /usr/local/bin/ansible-pull --checkout master --directory /opt/ansible-pull --inventory-file=/tmp/inventory.ini --module-name=git --url=https://github.com/kurron/ansible-pull.git --verbose playbook.yml 
      - name: Add the newrelic user to the docker group 
        user: name=rewrelic groups=docker

- name: Customize rkurr account 
  hosts: all
  tasks:
      - name: Copy Git configuration file
        copy: src=files/.gitconfig dest=/home/rkurr/.gitconfig owner=rkurr group=rkurr mode=644 backup=no
      - user: name=rkurr groups=docker
      - name: Copy bashrc change script to a safe place
        copy: src=scripts/append-line-to-bashrc.sh dest=/tmp/append-line-to-bashrc.sh owner=root group=root mode=755 backup=no
      - name: set editor to VI
        command: /tmp/append-line-to-bashrc.sh editor 'set -o vi'
      - apt: name=sshpass state=present

- name: Install BitTorrent Sync Docker Containers
  hosts: bittorent-sync-container
  tasks:
      - name: BitTorrent Sync Data
        docker:
            name: btsync-data
            image: busybox
            state: present
            volumes:
            - /mnt/bookkeeping
            - /mnt/sync
      - name: BitTorrent Sync
        docker:
            name: btsync
            hostname: "{{ ansible_hostname }}"
            image: kurron/docker-bittorrent-sync
            state: started
            restart_policy: always
            pull: always
            net: host
            ports:
            - "1234:1234"
            - "8888:8888"
            volumes_from:
            - btsync-data
            env:
                SERVICE_1234_NAME: btsync
                SERVICE_8888_NAME: btsync-ui

- name: Set Up Plex Media Server 
  hosts: plex-host 
  tasks:
      - name: Create the NAS mount point 
        file: path=/mnt/nas state=directory
      - name: Install NFS packages 
        apt: name=nfs-common state=present 
      - name: Mount NAS drive 
        mount: fstype=nfs name=/mnt/nas src=nas:/media state=mounted opts=ro
      - name: Plex Data
        docker:
            name: plex-data
            image: busybox
            state: present
            volumes:
            - /config
      - name: Plex
        docker:
            name: plex
            hostname: plex
            image: timhaak/plex 
            state: started
            restart_policy: always
            pull: always
            net: host
            ports:
            - "32400:32400"
            volumes_from:
            - plex-data
            - btsync-data
            volumes:
            - /mnt/nas:/data

- name: Set Up BitTorrent Client 
  hosts: transmission-host
  tasks:
      - name: Transmission Data
        docker:
            name: transmission-data
            image: busybox
            state: present
            volumes:
            - /var/lib/transmission-daemon 
      - name: Transmission
        docker:
            name: transmission
            hostname: transmission
            image: dperson/transmission 
            state: started
            restart_policy: always
            pull: always
            ports:
            - "9091:9091"
            - "51413:51413"
            net: host
            volumes_from:
            - transmission-data
            env:
                TRUSER: admin
                TRPASSWD: admin
                TIMEZONE: UTC

- name: Set Up Apt Cache Server
  hosts: apt-cache 
  tasks:
      - name: Apt Cache Data
        docker:
            name: apt-cache-data
            image: busybox
            state: present
            volumes:
            - /var/cache/apt-cacher 
      - name: Apt Cache
        docker:
            name: apt-cache
            hostname: apt-cache
            image: clue/apt-cacher 
            state: started
            restart_policy: always
            pull: always
            ports:
            - "3142:3142"
            volumes_from:
            - apt-cache-data

- name: Use Apt Cache Server
  hosts: all 
  tasks:
      - name: Copy apt configuration file 
        copy: src=files/01proxy dest=/etc/apt/apt.conf.d/01proxy owner=root group=root mode=644 backup=no
